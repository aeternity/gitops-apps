{{ $versions := .Values.versions }}
{{ $imageTag := .Values.image.tag }}
{{ $allVersions := append $versions (merge (dict "version" (default .Values.image.tag .Chart.AppVersion )) $) | compact | uniq }}
{{- range $key, $val := $allVersions}}
{{- if $val.version }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.versionedFullname" (merge (dict "version" $val.version) $) }}
  labels:
    {{- include "app.labels" $ | nindent 4 }}
    app.kubernetes.io/version: {{ quote $val.version }}
    {{- with $val.gitSha }} 
    app.kubernetes.io/gitSha: {{ quote $val.gitSha }}
    {{- end }}
spec:
  {{- if not $.Values.autoscaling.enabled }}
  replicas: {{ $.Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" $ | nindent 6 }}
      {{- if not $imageTag }} 
      app.kubernetes.io/version: {{ $val.version }}
      {{- end }}
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/version: {{ quote $val.version }}
        {{- with $val.gitSha }} 
        app.kubernetes.io/gitSha: {{ quote $val.gitSha }}
        {{- end }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      {{- if $.Values.postgresql.enabled }}
      initContainers:
        - name: {{ include "app.fullname" $ }}-init
          image: "{{ $.Values.image.repository | default (print "aeternity/" $.Release.Name) }}:{{ $val.version }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          command: ["/bin/sh"]
          args:
            - -c
            - >-
                rm -rf .env &&
                export DATABASE_URL=postgresql://$POSTGRES_USERNAME:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DATABASE?schema=$POSTGRES_SCHEMA &&
                npx prisma db push --accept-data-loss
          env:
            - name: "POSTGRES_DB"
              value: "{{ include "app.fullname" $ }}"
            - name: "POSTGRES_PORT"
              value: "{{ $.Values.postgresql.port }}"
            - name: "POSTGRES_HOST"
              value: "{{ $.Values.postgresql.host }}"
            - name: "POSTGRES_USERNAME"
              value: "{{ $.Values.postgresql.username }}"
            - name: "POSTGRES_SCHEMA"
              value: "{{ include "app.fullname" $ }}-{{ $val.version }}"
          {{- range $key, $value := $.Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := $.Values.encValues }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.fullname" $ }}-secret
                  key: {{ $key }}
            {{- end }}
        {{- end }}
      containers:
        - name: {{ include "app.fullname" $ }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $.Values.image.repository | default (print "aeternity/" $.Release.Name) }}:{{ $val.version }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          env:
            {{- if $.Values.postgresql.enabled }}
            - name: "POSTGRES_DB"
              value: "{{ include "app.fullname" $ }}"
            - name: "POSTGRES_PORT"
              value: "{{ $.Values.postgresql.port }}"
            - name: "POSTGRES_HOST"
              value: "{{ $.Values.postgresql.host }}"
            - name: "POSTGRES_USERNAME"
              value: "{{ $.Values.postgresql.username }}"
            - name: "POSTGRES_SCHEMA"
              value: "{{ include "app.fullname" $ }}-{{ $val.version }}"
            {{- end }}
            {{- range $key, $value := $.Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := $.Values.encValues }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.fullname" $ }}-secret
                  key: {{ $key }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ $.Values.service.port }}
              protocol: TCP
          {{- if $.Values.probes.liveness.enabled }}
          livenessProbe:
            {{- toYaml $.Values.probes.liveness.config | nindent 12 }}
          {{- end }}
          {{- if $.Values.probes.readiness.enabled }}
          readinessProbe:
            {{- toYaml $.Values.probes.readiness.config | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
          volumeMounts:
          - name: data
            mountPath: {{ $.Values.persistence.mountPath | default "/opt" }}
      volumes:
      - name: data
      {{- if $.Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "app.versionedFullname" (merge (dict "version" $val.version) $) }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
